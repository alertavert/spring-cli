/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.1.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    id 'org.springframework.boot' version '2.4.0'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

group = 'com.alertavert'
version = '0.1.0'
sourceCompatibility = JavaVersion.VERSION_15

ext {
    lombokVersion = "1.18.22"
    mockitoVersion = "3.6.0"

    bootVersion = "2.5.5"
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter:${bootVersion}"
    implementation "org.springframework.boot:spring-boot-configuration-processor:${bootVersion}"

    // Lombok
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'com.google.guava:guava:30.1-jre'
}

application {
    // Define the main class for the application.
    mainClass = 'com.alertavert.constructs.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
